{"version":3,"file":"static/js/2902.41e87562.chunk.js","mappings":"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","sources":["assets/images/tools_empty.svg","api/client.js","api/tools.js","hooks/useApi.js","hooks/useConfirm.js","ui-component/button/StyledButton.js","ui-component/cards/Skeleton/ChatflowCard.js","ui-component/cards/ItemCard.js","ui-component/dialog/ConfirmDialog.js","ui-component/editor/CodeEditor.js","ui-component/tooltip/TooltipWithParser.js","utils/useNotifier.js","ui-component/grid/Grid.js","views/tools/ToolDialog.js","views/tools/index.js"],"sourcesContent":["var _path, _path2, _path3, _path4, _path5, _path6, _path7, _ellipse, _ellipse2, _ellipse3, _path8, _path9, _path10, _circle, _path11, _path12, _circle2, _circle3, _path13, _ellipse4, _ellipse5, _ellipse6, _ellipse7, _circle4, _path14, _ellipse8, _path15, _ellipse9, _circle5, _circle6, _path16, _path17, _path18, _path19, _path20, _path21, _circle7, _circle8, _path22;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgToolsEmpty(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    width: 620.87643,\n    height: 425.50091,\n    viewBox: \"0 0 620.87643 425.50091\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M774.835,609.82742c25.95488-19.769,38.35157-52.98886,30.5907-84.67858q-.28924-1.1811-.6106-2.35681c-5.14512-18.81065-17.87431-36.68854-36.42655-42.69907-15.57756-5.0467-32.58093-1.16586-48.83211-3.17276-31.90194-3.93968-56.63486-29.75207-74.03759-56.77793-17.40277-27.02593-30.7774-57.27755-53.90189-79.60489-38.117-36.80284-100.29531-44.72652-147.55488-20.77063-47.25954,23.956-77.36336,77.10424-76.07951,130.07313,1.2839,52.96892,32.72918,103.61088,78.39554,130.47969,16.776,9.87049,36.179,16.863,55.4889,14.41614,16.755-2.12308,31.97892-11.12589,48.655-13.79867,26.21873-4.20225,52.27041,7.65209,74.94762,21.466,22.67716,13.8139,44.58173,30.18754,70.35126,36.59165C720.84306,645.21307,751.843,627.33966,774.835,609.82742Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#f2f2f2\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M569.46756,373.27275h-258.57a20.36369,20.36369,0,0,0-20.34,20.34v128.69a20.36368,20.36368,0,0,0,20.34,20.34h258.57a20.35727,20.35727,0,0,0,20.34-20.34v-128.69A20.35729,20.35729,0,0,0,569.46756,373.27275Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#fff\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M569.46852,543.64532H310.90212A21.36451,21.36451,0,0,1,289.56179,522.305V393.61114a21.36451,21.36451,0,0,1,21.34033-21.34033h258.5664a21.36452,21.36452,0,0,1,21.34034,21.34033V522.305A21.36452,21.36452,0,0,1,569.46852,543.64532ZM310.90212,374.27081a19.36253,19.36253,0,0,0-19.34033,19.34033V522.305a19.36253,19.36253,0,0,0,19.34033,19.34033h258.5664A19.36254,19.36254,0,0,0,588.80886,522.305V393.61114a19.36254,19.36254,0,0,0-19.34034-19.34033Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#2f2e41\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M584.36253,571.2219H336.574a8.07568,8.07568,0,1,1,0-16.15137H584.36253a8.07568,8.07568,0,0,1,0,16.15137Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#673ab7\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M813.114,466.4061H705.06175a8.50951,8.50951,0,0,1-8.5-8.5V404.12631a8.50951,8.50951,0,0,1,8.5-8.5H813.114a8.50951,8.50951,0,0,1,8.5,8.5V457.9061A8.50951,8.50951,0,0,1,813.114,466.4061Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#fff\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M813.114,467.40606H705.06179a9.5108,9.5108,0,0,1-9.5-9.5V404.12628a9.5108,9.5108,0,0,1,9.5-9.5H813.114a9.5108,9.5108,0,0,1,9.5,9.5v53.77978A9.51081,9.51081,0,0,1,813.114,467.40606ZM705.06179,396.62628a7.50819,7.50819,0,0,0-7.5,7.5v53.77978a7.5082,7.5082,0,0,0,7.5,7.5H813.114a7.5082,7.5082,0,0,0,7.5-7.5V404.12628a7.5082,7.5082,0,0,0-7.5-7.5Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#2f2e41\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M773.42989,271.73374h-454.293a1.807,1.807,0,0,1,0-3.61319h454.293a1.807,1.807,0,0,1,0,3.61319Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#cacaca\"\n  })), _ellipse || (_ellipse = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 60.49941,\n    cy: 10.82345,\n    rx: 10.58751,\n    ry: 10.82345,\n    fill: \"#3f3d56\"\n  })), _ellipse2 || (_ellipse2 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 97.07443,\n    cy: 10.82345,\n    rx: 10.58751,\n    ry: 10.82345,\n    fill: \"#3f3d56\"\n  })), _ellipse3 || (_ellipse3 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 133.64945,\n    cy: 10.82345,\n    rx: 10.58751,\n    ry: 10.82345,\n    fill: \"#3f3d56\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M751.40863,239.93225h-25.981a1.96761,1.96761,0,0,0,0,3.93445h25.981a1.96761,1.96761,0,0,0,0-3.93445Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#3f3d56\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M751.40863,247.31662h-25.981a1.96761,1.96761,0,0,0,0,3.93445h25.981a1.96761,1.96761,0,0,0,0-3.93445Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#3f3d56\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M751.40863,254.69129h-25.981a1.96761,1.96761,0,0,0,0,3.93445h25.981a1.96761,1.96761,0,0,0,0-3.93445Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#3f3d56\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 531.3001,\n    cy: 227.78558,\n    r: 12.37235,\n    fill: \"#3f3d56\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M819.93558,469.97983c-.02638,0-.05276-.00086-.07913-.00215a1.618,1.618,0,0,1-1.19937-.62316l-2.06763-2.65821a1.61859,1.61859,0,0,1,.2837-2.27178l.07441-.0579a1.61843,1.61843,0,0,1,2.27221.28392,1.18065,1.18065,0,0,0,1.788.08707l4.1981-4.43206a1.621,1.621,0,0,1,2.28872-.06219l.06884.06562a1.61842,1.61842,0,0,1,.06175,2.28851l-6.51491,6.87668A1.61694,1.61694,0,0,1,819.93558,469.97983Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#fff\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M482.26132,521.98877a42.83052,42.83052,0,0,1-4.43,19.04c-.33.68-.68,1.34-1.05,2h-75.17c-.37-.66-.72-1.32-1.05-2a43.07126,43.07126,0,1,1,81.7-19.04Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#2f2e41\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 150.7258,\n    cy: 273.83154,\n    r: 14.71922,\n    fill: \"#fff\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 150.7258,\n    cy: 273.83154,\n    r: 4.90642,\n    fill: \"#3f3d56\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M397.42045,481.93283c-3.47748-15.57379,7.63867-31.31043,24.82861-35.1488s33.94423,5.67511,37.4217,21.2489-7.91492,21.31769-25.10486,25.156S400.898,497.50668,397.42045,481.93283Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#673ab7\"\n  })), _ellipse4 || (_ellipse4 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 481.86685,\n    cy: 545.87131,\n    rx: 6.59448,\n    ry: 21.00616,\n    transform: \"translate(-535.18697 339.05996) rotate(-50.95946)\",\n    fill: \"#2f2e41\"\n  })), _ellipse5 || (_ellipse5 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 392.86685,\n    cy: 508.87131,\n    rx: 6.59448,\n    ry: 21.00616,\n    transform: \"translate(-539.39062 256.23881) rotate(-50.95946)\",\n    fill: \"#2f2e41\"\n  })), _ellipse6 || (_ellipse6 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 807.47311,\n    cy: 407.61601,\n    rx: 21.00616,\n    ry: 6.59448,\n    transform: \"translate(-365.84099 -22.36516) rotate(-14.48222)\",\n    fill: \"#2f2e41\"\n  })), _ellipse7 || (_ellipse7 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 719.47314,\n    cy: 411.61606,\n    rx: 21.00616,\n    ry: 6.59448,\n    transform: \"translate(-226.28569 680.79993) rotate(-67.4341)\",\n    fill: \"#2f2e41\"\n  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 475.79752,\n    cy: 164.43254,\n    r: 42.01233,\n    fill: \"#2f2e41\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M759.23733,457.5503l-12.76312.05932c-9.34253-9.197-7.96015-16.57959-.10627-22.86724l12.76307-.05933C753.24673,441.928,751.67831,449.44822,759.23733,457.5503Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#2f2e41\"\n  })), _ellipse8 || (_ellipse8 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 750.20791,\n    cy: 459.9854,\n    rx: 10.63605,\n    ry: 3.98853,\n    transform: \"translate(-419.14428 203.57028) rotate(-30.26634)\",\n    fill: \"#2f2e41\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M782.23733,457.5503l-12.76312.05932c-9.34253-9.197-7.96015-16.57959-.10627-22.86724l12.76307-.05933C776.24673,441.928,774.67831,449.44822,782.23733,457.5503Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#2f2e41\"\n  })), _ellipse9 || (_ellipse9 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 773.20792,\n    cy: 459.9854,\n    rx: 10.63605,\n    ry: 3.98853,\n    transform: \"translate(-416.00919 215.16275) rotate(-30.26634)\",\n    fill: \"#2f2e41\"\n  })), _circle5 || (_circle5 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 474.68448,\n    cy: 153.80158,\n    r: 14.35864,\n    fill: \"#fff\"\n  })), _circle6 || (_circle6 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 474.76596,\n    cy: 160.70867,\n    r: 4.78621,\n    fill: \"#3f3d56\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M805.93063,362.4228c3.32165-15.20789-7.59339-30.50849-24.37952-34.17481s-33.08661,5.68993-36.40826,20.89783,7.81762,20.75931,24.6037,24.42569S802.609,377.63071,805.93063,362.4228Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#673ab7\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M773.84939,419.99a9.57243,9.57243,0,0,1-19.14435.13842l-.00018-.03064-.00012-.0188c-.0246-5.28665,4.256-6.40152,9.54266-6.426S773.82485,414.70334,773.84939,419.99Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#fff\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M902.36253,405.722H829.574a8.07569,8.07569,0,1,1,0-16.15137h72.78857a8.07569,8.07569,0,0,1,0,16.15137Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#673ab7\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M770.42312,627.07088a34.67943,34.67943,0,1,1-34.67943-34.67943h0a34.53207,34.53207,0,0,1,34.67943,34.384Q770.42378,626.92317,770.42312,627.07088Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#fff\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M735.74376,662.75046a35.67945,35.67945,0,1,1,0-71.35889c.05176,0,.10449-.00049.15625-.00049a35.53226,35.53226,0,0,1,35.523,35.38086v.29883A35.72,35.72,0,0,1,735.74376,662.75046Zm.1499-69.35938c-.04931,0-.09619.00049-.1455.00049a33.67945,33.67945,0,1,0,33.6748,33.6792v-.29A33.57226,33.57226,0,0,0,735.89366,593.39108Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#2f2e41\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M759.86035,651.91v.07224a34.64757,34.64757,0,0,1-46.875,1.24265c-.02893-.43347-.04339-.88141-.04339-1.31493a23.45919,23.45919,0,0,1,46.91834-.06509V651.91Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#2f2e41\"\n  })), _circle7 || (_circle7 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 447.43041,\n    cy: 408.71336,\n    r: 8.01934,\n    fill: \"#fff\"\n  })), _circle8 || (_circle8 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 447.43041,\n    cy: 408.71336,\n    r: 2.6731,\n    fill: \"#3f3d56\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M713.63733,630.08232c-1.89459-8.48492,4.16172-17.05855,13.52716-19.14977s18.49348,3.09191,20.38807,11.57683-4.31218,11.61431-13.67762,13.70553S715.53192,638.56728,713.63733,630.08232Z\",\n    transform: \"translate(-289.56179 -237.24954)\",\n    fill: \"#673ab7\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgToolsEmpty);\nexport default __webpack_public_path__ + \"static/media/tools_empty.eecfe609e06019f7ab47cef3ee1171a1.svg\";\nexport { ForwardRef as ReactComponent };","import axios from 'axios'\nimport { baseURL } from 'store/constant'\n\nconst apiClient = axios.create({\n    baseURL: `${baseURL}/api/v1`,\n    headers: {\n        'Content-type': 'application/json'\n    }\n})\n\napiClient.interceptors.request.use(function (config) {\n    const username = localStorage.getItem('username')\n    const password = localStorage.getItem('password')\n\n    if (username && password) {\n        config.auth = {\n            username,\n            password\n        }\n    }\n\n    return config\n})\n\nexport default apiClient\n","import client from './client'\n\nconst getAllTools = () => client.get('/tools')\n\nconst getSpecificTool = (id) => client.get(`/tools/${id}`)\n\nconst createNewTool = (body) => client.post(`/tools`, body)\n\nconst updateTool = (id, body) => client.put(`/tools/${id}`, body)\n\nconst deleteTool = (id) => client.delete(`/tools/${id}`)\n\nexport default {\n    getAllTools,\n    getSpecificTool,\n    createNewTool,\n    updateTool,\n    deleteTool\n}\n","import { useState } from 'react'\n\nexport default (apiFunc) => {\n    const [data, setData] = useState(null)\n    const [error, setError] = useState(null)\n    const [loading, setLoading] = useState(false)\n\n    const request = async (...args) => {\n        setLoading(true)\n        try {\n            const result = await apiFunc(...args)\n            setData(result.data)\n        } catch (err) {\n            setError(err || 'Unexpected Error!')\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    return {\n        data,\n        error,\n        loading,\n        request\n    }\n}\n","import { useContext } from 'react'\nimport ConfirmContext from 'store/context/ConfirmContext'\nimport { HIDE_CONFIRM, SHOW_CONFIRM } from 'store/actions'\n\nlet resolveCallback\nconst useConfirm = () => {\n    const [confirmState, dispatch] = useContext(ConfirmContext)\n\n    const closeConfirm = () => {\n        dispatch({\n            type: HIDE_CONFIRM\n        })\n    }\n\n    const onConfirm = () => {\n        closeConfirm()\n        resolveCallback(true)\n    }\n\n    const onCancel = () => {\n        closeConfirm()\n        resolveCallback(false)\n    }\n    const confirm = (confirmPayload) => {\n        dispatch({\n            type: SHOW_CONFIRM,\n            payload: confirmPayload\n        })\n        return new Promise((res) => {\n            resolveCallback = res\n        })\n    }\n\n    return { confirm, onConfirm, onCancel, confirmState }\n}\n\nexport default useConfirm\n","import { styled } from '@mui/material/styles'\nimport { Button } from '@mui/material'\nimport MuiToggleButton from '@mui/material/ToggleButton'\n\nexport const StyledButton = styled(Button)(({ theme, color = 'primary' }) => ({\n    // backgroundColor: theme.palette[color].main,\n    background: \"#469DBB\",\n    color: '#fff',\n    borderRadius: \"0px\",\n    '&:disabled': {backgroundColor: theme.palette.primary.isDisable},\n    '&:hover': {\n        // backgroundColor: theme.palette[color].main,\n        backgroundColor: \"#2398c1\",\n        backgroundImage: `linear-gradient(rgb(0 0 0/10%) 0 0)`\n    }\n}))\n\nexport const StyledToggleButton = styled(MuiToggleButton)(({ theme, color = 'primary' }) => ({\n    '&.Mui-selected, &.Mui-selected:hover': {\n        color: 'white',\n        backgroundColor: theme.palette[color].main\n    }\n}))\n","// material-ui\nimport { Card, CardContent, Grid } from '@mui/material'\nimport Skeleton from '@mui/material/Skeleton'\n\n// ==============================|| SKELETON - BRIDGE CARD ||============================== //\n\nconst ChatflowCard = () => (\n    <Card>\n        <CardContent>\n            <Grid container direction='column'>\n                <Grid item>\n                    <Grid container justifyContent='space-between'>\n                        <Grid item>\n                            <Skeleton variant='rectangular' width={44} height={44} />\n                        </Grid>\n                        <Grid item>\n                            <Skeleton variant='rectangular' width={34} height={34} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Skeleton variant='rectangular' sx={{ my: 2 }} height={40} />\n                </Grid>\n                <Grid item>\n                    <Skeleton variant='rectangular' height={30} />\n                </Grid>\n            </Grid>\n        </CardContent>\n    </Card>\n)\n\nexport default ChatflowCard\n","import PropTypes from 'prop-types'\n\n// material-ui\nimport { styled } from '@mui/material/styles'\nimport { Box, Grid, Typography } from '@mui/material'\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard'\nimport SkeletonChatflowCard from 'ui-component/cards/Skeleton/ChatflowCard'\nimport theme from 'themes'\nimport { useSelector } from 'react-redux'\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    background: theme.palette.card.ItemCard,\n    // background: theme.customization.isDarkMode ? \"#fff\" : \"#121D35\", // customization is not working here\n    color: theme.darkTextPrimary,\n    // color: customization.isDarkMode ? \"#121D35\" : \"#fff\",\n    // color: theme.paper,\n    overflow: 'auto',\n    position: 'relative',\n    boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)',\n    cursor: 'pointer',\n    '&:hover': {\n        background: theme.palette.card.ItemCardhover,\n        // background: \"rgb(92 49 84 / 87%)\",\n        boxShadow: '0 2px 14px 0 rgb(32 40 45 / 20%)'\n    },\n    maxHeight: '300px',\n    maxWidth: '300px',\n    overflowWrap: 'break-word',\n    whiteSpace: 'pre-line'\n}))\n\n// ===========================|| CONTRACT CARD ||=========================== //\n\nconst ItemCard = ({ isLoading, data, images, onClick }) => {\n    const customization = useSelector((state) => state.customization);\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonChatflowCard />\n            ) : (\n                <CardWrapper border={false} content={false} onClick={onClick}>\n                    <Box sx={{ p: 2.25 }}>\n                        <Grid container direction='column'>\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    flexDirection: 'row',\n                                    alignItems: 'center'\n                                }}\n                            >\n                                {data.iconSrc && (\n                                    <div\n                                        style={{\n                                            width: 35,\n                                            height: 35,\n                                            marginRight: 10,\n                                            borderRadius: '50%',\n                                            background: `url(${data.iconSrc})`,\n                                            backgroundSize: 'contain',\n                                            backgroundRepeat: 'no-repeat',\n                                            backgroundPosition: 'center center'\n                                        }}\n                                    ></div>\n                                )}\n                                {!data.iconSrc && data.color && (\n                                    <div\n                                        style={{\n                                            width: 35,\n                                            height: 35,\n                                            marginRight: 10,\n                                            // borderRadius: '50%',\n                                            background: data.color\n                                        }}\n                                    ></div>\n                                )}\n                                <Typography\n                                    sx={{ color: customization.isDarkMode ? \"#121D35\" : '#FFF860', fontSize: '1.5rem', fontWeight: 500, overflowWrap: 'break-word', whiteSpace: 'pre-line' }}\n                                >\n                                    {data.templateName || data.name}\n                                </Typography>\n                            </div>\n                            {data.description && (\n                                <span style={{ color: customization.isDarkMode ? \"#121D35\" : \"#fff\", marginTop: 10, overflowWrap: 'break-word', whiteSpace: 'pre-line' }}>\n                                    {data.description}\n                                </span>\n                            )}\n                            {images && (\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        flexDirection: 'row',\n                                        flexWrap: 'wrap',\n                                        marginTop: 5\n                                    }}\n                                >\n                                    {images.map((img) => (\n                                        <div\n                                            key={img}\n                                            style={{\n                                                width: 35,\n                                                height: 35,\n                                                marginRight: 5,\n                                                // borderRadius: '50%',\n                                                // backgroundColor: 'white',\n                                                backgroundColor: \"#EEEEEE\",\n                                                marginTop: 5\n                                            }}\n                                        >\n                                            <img\n                                                style={{ width: '100%', height: '100%', padding: 5, objectFit: 'contain' }}\n                                                alt=''\n                                                src={img}\n                                            />\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                        </Grid>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    )\n}\n\nItemCard.propTypes = {\n    isLoading: PropTypes.bool,\n    data: PropTypes.object,\n    images: PropTypes.array,\n    onClick: PropTypes.func\n}\n\nexport default ItemCard\n","import { createPortal } from 'react-dom'\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material'\nimport useConfirm from 'hooks/useConfirm'\nimport { StyledButton } from 'ui-component/button/StyledButton'\n\nconst ConfirmDialog = () => {\n    const { onConfirm, onCancel, confirmState } = useConfirm()\n    const portalElement = document.getElementById('portal')\n\n    const component = confirmState.show ? (\n        <Dialog\n            fullWidth\n            maxWidth='xs'\n            open={confirmState.show}\n            onClose={onCancel}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle sx={{ fontSize: '1rem' }} id='alert-dialog-title'>\n                {confirmState.title}\n            </DialogTitle>\n            <DialogContent>\n                <span>{confirmState.description}</span>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onCancel}>{confirmState.cancelButtonName}</Button>\n                <StyledButton variant='contained' onClick={onConfirm}>\n                    {confirmState.confirmButtonName}\n                </StyledButton>\n            </DialogActions>\n        </Dialog>\n    ) : null\n\n    return createPortal(component, portalElement)\n}\n\nexport default ConfirmDialog\n","import PropTypes from 'prop-types'\nimport CodeMirror from '@uiw/react-codemirror'\nimport { javascript } from '@codemirror/lang-javascript'\nimport { json } from '@codemirror/lang-json'\nimport { vscodeDark } from '@uiw/codemirror-theme-vscode'\nimport { sublime } from '@uiw/codemirror-theme-sublime'\nimport { EditorView } from '@codemirror/view'\n\nexport const CodeEditor = ({ value, height, theme, lang, placeholder, disabled = false, basicSetup = {}, onValueChange }) => {\n    const customStyle = EditorView.baseTheme({\n        '&': {\n            color: '#191b1f',\n            padding: '10px'\n        },\n        '.cm-placeholder': {\n            color: 'rgba(120, 120, 120, 0.5)'\n        }\n    })\n\n    return (\n        <CodeMirror\n            placeholder={placeholder}\n            value={value}\n            height={height ?? 'calc(100vh - 220px)'}\n            theme={theme === 'dark' ? (lang === 'js' ? vscodeDark : sublime) : 'none'}\n            extensions={\n                lang === 'js'\n                    ? [javascript({ jsx: true }), EditorView.lineWrapping, customStyle]\n                    : [json(), EditorView.lineWrapping, customStyle]\n            }\n            onChange={onValueChange}\n            readOnly={disabled}\n            editable={!disabled}\n            basicSetup={basicSetup}\n        />\n    )\n}\n\nCodeEditor.propTypes = {\n    value: PropTypes.string,\n    height: PropTypes.string,\n    theme: PropTypes.string,\n    lang: PropTypes.string,\n    placeholder: PropTypes.string,\n    disabled: PropTypes.bool,\n    basicSetup: PropTypes.object,\n    onValueChange: PropTypes.func\n}\n","import { Info } from '@mui/icons-material'\nimport { IconButton, Tooltip } from '@mui/material'\nimport parser from 'html-react-parser'\nimport PropTypes from 'prop-types'\nimport { useSelector } from 'react-redux'\n\nexport const TooltipWithParser = ({ title, style }) => {\n    const customization = useSelector((state) => state.customization)\n\n    return (\n        <Tooltip title={parser(title)} placement='right'>\n            <IconButton sx={{ height: 15, width: 15 }}>\n                <Info\n                    style={{\n                        ...style,\n                        background: 'transparent',\n                        color: customization.isDarkMode ? 'white' : 'inherit',\n                        height: 15,\n                        width: 15\n                    }}\n                />\n            </IconButton>\n        </Tooltip>\n    )\n}\n\nTooltipWithParser.propTypes = {\n    title: PropTypes.node,\n    style: PropTypes.any\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useSnackbar } from 'notistack'\nimport { removeSnackbar } from 'store/actions'\n\nlet displayed = []\n\nconst useNotifier = () => {\n    const dispatch = useDispatch()\n    const notifier = useSelector((state) => state.notifier)\n    const { notifications } = notifier\n\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n\n    const storeDisplayed = (id) => {\n        displayed = [...displayed, id]\n    }\n\n    const removeDisplayed = (id) => {\n        displayed = [...displayed.filter((key) => id !== key)]\n    }\n\n    React.useEffect(() => {\n        notifications.forEach(({ key, message, options = {}, dismissed = false }) => {\n            if (dismissed) {\n                // dismiss snackbar using notistack\n                closeSnackbar(key)\n                return\n            }\n\n            // do nothing if snackbar is already displayed\n            if (displayed.includes(key)) return\n\n            // display snackbar using notistack\n            enqueueSnackbar(message, {\n                key,\n                ...options,\n                onClose: (event, reason, myKey) => {\n                    if (options.onClose) {\n                        options.onClose(event, reason, myKey)\n                    }\n                },\n                onExited: (event, myKey) => {\n                    // remove this snackbar from redux store\n                    dispatch(removeSnackbar(myKey))\n                    removeDisplayed(myKey)\n                }\n            })\n\n            // keep track of snackbars that we've displayed\n            storeDisplayed(key)\n        })\n    }, [notifications, closeSnackbar, enqueueSnackbar, dispatch])\n}\n\nexport default useNotifier\n","import PropTypes from 'prop-types'\nimport { DataGrid } from '@mui/x-data-grid'\nimport { IconPlus } from '@tabler/icons'\nimport { Button } from '@mui/material'\n\nexport const Grid = ({ columns, rows, style, disabled = false, onRowUpdate, addNewRow }) => {\n    const handleProcessRowUpdate = (newRow) => {\n        onRowUpdate(newRow)\n        return newRow\n    }\n\n    return (\n        <>\n            {!disabled && (\n                <Button variant='outlined' onClick={addNewRow} startIcon={<IconPlus />}>\n                    Add Item\n                </Button>\n            )}\n            {rows && columns && (\n                <div style={{ marginTop: 10, height: 300, width: '100%', ...style }}>\n                    <DataGrid\n                        processRowUpdate={handleProcessRowUpdate}\n                        isCellEditable={() => {\n                            return !disabled\n                        }}\n                        onProcessRowUpdateError={(error) => console.error(error)}\n                        rows={rows}\n                        columns={columns}\n                    />\n                </div>\n            )}\n        </>\n    )\n}\n\nGrid.propTypes = {\n    rows: PropTypes.array,\n    columns: PropTypes.array,\n    style: PropTypes.any,\n    disabled: PropTypes.bool,\n    addNewRow: PropTypes.func,\n    onRowUpdate: PropTypes.func\n}\n","import { createPortal } from 'react-dom'\nimport PropTypes from 'prop-types'\nimport { useState, useEffect, useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { enqueueSnackbar as enqueueSnackbarAction, closeSnackbar as closeSnackbarAction } from 'store/actions'\nimport { cloneDeep } from 'lodash'\n\nimport { Box, Typography, Button, Dialog, DialogActions, DialogContent, DialogTitle, Stack, OutlinedInput } from '@mui/material'\nimport { StyledButton } from 'ui-component/button/StyledButton'\nimport { Grid } from 'ui-component/grid/Grid'\nimport { TooltipWithParser } from 'ui-component/tooltip/TooltipWithParser'\nimport { GridActionsCellItem } from '@mui/x-data-grid'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport ConfirmDialog from 'ui-component/dialog/ConfirmDialog'\nimport { CodeEditor } from 'ui-component/editor/CodeEditor'\n\n// Icons\nimport { IconX, IconFileExport } from '@tabler/icons'\n\n// API\nimport toolsApi from 'api/tools'\n\n// Hooks\nimport useConfirm from 'hooks/useConfirm'\nimport useApi from 'hooks/useApi'\n\n// utils\nimport useNotifier from 'utils/useNotifier'\nimport { generateRandomGradient, formatDataGridRows } from 'utils/genericHelper'\nimport { HIDE_CANVAS_DIALOG, SHOW_CANVAS_DIALOG } from 'store/actions'\n\nconst exampleAPIFunc = `/*\n* You can use any libraries imported in Flowise\n* You can use properties specified in Output Schema as variables. Ex: Property = userid, Variable = $userid\n* Must return a string value at the end of function\n*/\n\nconst fetch = require('node-fetch');\nconst url = 'https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&current_weather=true';\nconst options = {\n    method: 'GET',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n};\ntry {\n    const response = await fetch(url, options);\n    const text = await response.text();\n    return text;\n} catch (error) {\n    console.error(error);\n    return '';\n}`\n\nconst ToolDialog = ({ show, dialogProps, onUseTemplate, onCancel, onConfirm }) => {\n    const portalElement = document.getElementById('portal')\n\n    const customization = useSelector((state) => state.customization)\n    const dispatch = useDispatch()\n\n    // ==============================|| Snackbar ||============================== //\n\n    useNotifier()\n    const { confirm } = useConfirm()\n\n    const enqueueSnackbar = (...args) => dispatch(enqueueSnackbarAction(...args))\n    const closeSnackbar = (...args) => dispatch(closeSnackbarAction(...args))\n\n    const getSpecificToolApi = useApi(toolsApi.getSpecificTool)\n\n    const [toolId, setToolId] = useState('')\n    const [toolName, setToolName] = useState('')\n    const [toolDesc, setToolDesc] = useState('')\n    const [toolIcon, setToolIcon] = useState('')\n    const [toolSchema, setToolSchema] = useState([])\n    const [toolFunc, setToolFunc] = useState('')\n\n    const deleteItem = useCallback(\n        (id) => () => {\n            setTimeout(() => {\n                setToolSchema((prevRows) => prevRows.filter((row) => row.id !== id))\n            })\n        },\n        []\n    )\n\n    const addNewRow = () => {\n        setTimeout(() => {\n            setToolSchema((prevRows) => {\n                let allRows = [...cloneDeep(prevRows)]\n                const lastRowId = allRows.length ? allRows[allRows.length - 1].id + 1 : 1\n                allRows.push({\n                    id: lastRowId,\n                    property: '',\n                    description: '',\n                    type: '',\n                    required: false\n                })\n                return allRows\n            })\n        })\n    }\n\n    const onRowUpdate = (newRow) => {\n        setTimeout(() => {\n            setToolSchema((prevRows) => {\n                let allRows = [...cloneDeep(prevRows)]\n                const indexToUpdate = allRows.findIndex((row) => row.id === newRow.id)\n                if (indexToUpdate >= 0) {\n                    allRows[indexToUpdate] = { ...newRow }\n                }\n                return allRows\n            })\n        })\n    }\n\n    const columns = useMemo(\n        () => [\n            { field: 'property', headerName: 'Property', editable: true, flex: 1 },\n            {\n                field: 'type',\n                headerName: 'Type',\n                type: 'singleSelect',\n                valueOptions: ['string', 'number', 'boolean', 'date'],\n                editable: true,\n                width: 120\n            },\n            { field: 'description', headerName: 'Description', editable: true, flex: 1 },\n            { field: 'required', headerName: 'Required', type: 'boolean', editable: true, width: 80 },\n            {\n                field: 'actions',\n                type: 'actions',\n                width: 80,\n                getActions: (params) => [\n                    <GridActionsCellItem key={'Delete'} icon={<DeleteIcon />} label='Delete' onClick={deleteItem(params.id)} />\n                ]\n            }\n        ],\n        [deleteItem]\n    )\n\n    useEffect(() => {\n        if (show) dispatch({ type: SHOW_CANVAS_DIALOG })\n        else dispatch({ type: HIDE_CANVAS_DIALOG })\n        return () => dispatch({ type: HIDE_CANVAS_DIALOG })\n    }, [show, dispatch])\n\n    useEffect(() => {\n        if (getSpecificToolApi.data) {\n            setToolId(getSpecificToolApi.data.id)\n            setToolName(getSpecificToolApi.data.name)\n            setToolDesc(getSpecificToolApi.data.description)\n            setToolSchema(formatDataGridRows(getSpecificToolApi.data.schema))\n            if (getSpecificToolApi.data.func) setToolFunc(getSpecificToolApi.data.func)\n            else setToolFunc('')\n        }\n    }, [getSpecificToolApi.data])\n\n    useEffect(() => {\n        if (dialogProps.type === 'EDIT' && dialogProps.data) {\n            // When tool dialog is opened from Tools dashboard\n            setToolId(dialogProps.data.id)\n            setToolName(dialogProps.data.name)\n            setToolDesc(dialogProps.data.description)\n            setToolIcon(dialogProps.data.iconSrc)\n            setToolSchema(formatDataGridRows(dialogProps.data.schema))\n            if (dialogProps.data.func) setToolFunc(dialogProps.data.func)\n            else setToolFunc('')\n        } else if (dialogProps.type === 'EDIT' && dialogProps.toolId) {\n            // When tool dialog is opened from CustomTool node in canvas\n            getSpecificToolApi.request(dialogProps.toolId)\n        } else if (dialogProps.type === 'IMPORT' && dialogProps.data) {\n            // When tool dialog is to import existing tool\n            setToolName(dialogProps.data.name)\n            setToolDesc(dialogProps.data.description)\n            setToolIcon(dialogProps.data.iconSrc)\n            setToolSchema(formatDataGridRows(dialogProps.data.schema))\n            if (dialogProps.data.func) setToolFunc(dialogProps.data.func)\n            else setToolFunc('')\n        } else if (dialogProps.type === 'TEMPLATE' && dialogProps.data) {\n            // When tool dialog is a template\n            setToolName(dialogProps.data.name)\n            setToolDesc(dialogProps.data.description)\n            setToolIcon(dialogProps.data.iconSrc)\n            setToolSchema(formatDataGridRows(dialogProps.data.schema))\n            if (dialogProps.data.func) setToolFunc(dialogProps.data.func)\n            else setToolFunc('')\n        } else if (dialogProps.type === 'ADD') {\n            // When tool dialog is to add a new tool\n            setToolId('')\n            setToolName('')\n            setToolDesc('')\n            setToolIcon('')\n            setToolSchema([])\n            setToolFunc('')\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dialogProps])\n\n    const useToolTemplate = () => {\n        onUseTemplate(dialogProps.data)\n    }\n\n    const exportTool = async () => {\n        try {\n            const toolResp = await toolsApi.getSpecificTool(toolId)\n            if (toolResp.data) {\n                const toolData = toolResp.data\n                delete toolData.id\n                delete toolData.createdDate\n                delete toolData.updatedDate\n                let dataStr = JSON.stringify(toolData, null, 2)\n                let dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr)\n\n                let exportFileDefaultName = `${toolName}-CustomTool.json`\n\n                let linkElement = document.createElement('a')\n                linkElement.setAttribute('href', dataUri)\n                linkElement.setAttribute('download', exportFileDefaultName)\n                linkElement.click()\n            }\n        } catch (error) {\n            const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\n            enqueueSnackbar({\n                message: `Failed to export Tool: ${errorData}`,\n                options: {\n                    key: new Date().getTime() + Math.random(),\n                    variant: 'error',\n                    persist: true,\n                    action: (key) => (\n                        <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                            <IconX />\n                        </Button>\n                    )\n                }\n            })\n            onCancel()\n        }\n    }\n\n    const addNewTool = async () => {\n        try {\n            const obj = {\n                name: toolName,\n                description: toolDesc,\n                color: generateRandomGradient(),\n                schema: JSON.stringify(toolSchema),\n                func: toolFunc,\n                iconSrc: toolIcon\n            }\n            const createResp = await toolsApi.createNewTool(obj)\n            if (createResp.data) {\n                enqueueSnackbar({\n                    message: 'New Tool added',\n                    options: {\n                        key: new Date().getTime() + Math.random(),\n                        variant: 'success',\n                        action: (key) => (\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                                <IconX />\n                            </Button>\n                        )\n                    }\n                })\n                onConfirm(createResp.data.id)\n            }\n        } catch (error) {\n            const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\n            enqueueSnackbar({\n                message: `Failed to add new Tool: ${errorData}`,\n                options: {\n                    key: new Date().getTime() + Math.random(),\n                    variant: 'error',\n                    persist: true,\n                    action: (key) => (\n                        <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                            <IconX />\n                        </Button>\n                    )\n                }\n            })\n            onCancel()\n        }\n    }\n\n    const saveTool = async () => {\n        try {\n            const saveResp = await toolsApi.updateTool(toolId, {\n                name: toolName,\n                description: toolDesc,\n                schema: JSON.stringify(toolSchema),\n                func: toolFunc,\n                iconSrc: toolIcon\n            })\n            if (saveResp.data) {\n                enqueueSnackbar({\n                    message: 'Tool saved',\n                    options: {\n                        key: new Date().getTime() + Math.random(),\n                        variant: 'success',\n                        action: (key) => (\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                                <IconX />\n                            </Button>\n                        )\n                    }\n                })\n                onConfirm(saveResp.data.id)\n            }\n        } catch (error) {\n            console.error(error)\n            const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\n            enqueueSnackbar({\n                message: `Failed to save Tool: ${errorData}`,\n                options: {\n                    key: new Date().getTime() + Math.random(),\n                    variant: 'error',\n                    persist: true,\n                    action: (key) => (\n                        <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                            <IconX />\n                        </Button>\n                    )\n                }\n            })\n            onCancel()\n        }\n    }\n\n    const deleteTool = async () => {\n        const confirmPayload = {\n            title: `Delete Tool`,\n            description: `Delete tool ${toolName}?`,\n            confirmButtonName: 'Delete',\n            cancelButtonName: 'Cancel'\n        }\n        const isConfirmed = await confirm(confirmPayload)\n\n        if (isConfirmed) {\n            try {\n                const delResp = await toolsApi.deleteTool(toolId)\n                if (delResp.data) {\n                    enqueueSnackbar({\n                        message: 'Tool deleted',\n                        options: {\n                            key: new Date().getTime() + Math.random(),\n                            variant: 'success',\n                            action: (key) => (\n                                <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                                    <IconX />\n                                </Button>\n                            )\n                        }\n                    })\n                    onConfirm()\n                }\n            } catch (error) {\n                const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\n                enqueueSnackbar({\n                    message: `Failed to delete Tool: ${errorData}`,\n                    options: {\n                        key: new Date().getTime() + Math.random(),\n                        variant: 'error',\n                        persist: true,\n                        action: (key) => (\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\n                                <IconX />\n                            </Button>\n                        )\n                    }\n                })\n                onCancel()\n            }\n        }\n    }\n\n    const component = show ? (\n        <Dialog\n            fullWidth\n            maxWidth='md'\n            open={show}\n            onClose={onCancel}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle sx={{ fontSize: '1rem' }} id='alert-dialog-title'>\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    {dialogProps.title}\n                    <div style={{ flex: 1 }} />\n                    {dialogProps.type === 'EDIT' && (\n                        <Button variant='outlined' onClick={() => exportTool()} startIcon={<IconFileExport />}>\n                            Export\n                        </Button>\n                    )}\n                </div>\n            </DialogTitle>\n            <DialogContent>\n                <Box sx={{ p: 2 }}>\n                    <Stack sx={{ position: 'relative' }} direction='row'>\n                        <Typography variant='overline'>\n                            Tool Name\n                            <span style={{ color: 'red' }}>&nbsp;*</span>\n                            <TooltipWithParser\n                                style={{ marginLeft: 10 }}\n                                title={'Tool name must be small capital letter with underscore. Ex: my_tool'}\n                            />\n                        </Typography>\n                    </Stack>\n                    <OutlinedInput\n                        id='toolName'\n                        type='string'\n                        fullWidth\n                        disabled={dialogProps.type === 'TEMPLATE'}\n                        placeholder='My New Tool'\n                        value={toolName}\n                        name='toolName'\n                        onChange={(e) => setToolName(e.target.value)}\n                    />\n                </Box>\n                <Box sx={{ p: 2 }}>\n                    <Stack sx={{ position: 'relative' }} direction='row'>\n                        <Typography variant='overline'>\n                            Tool description\n                            <span style={{ color: 'red' }}>&nbsp;*</span>\n                            <TooltipWithParser\n                                style={{ marginLeft: 10 }}\n                                title={'Description of what the tool does. This is for ChatGPT to determine when to use this tool.'}\n                            />\n                        </Typography>\n                    </Stack>\n                    <OutlinedInput\n                        id='toolDesc'\n                        type='string'\n                        fullWidth\n                        disabled={dialogProps.type === 'TEMPLATE'}\n                        placeholder='Description of what the tool does. This is for ChatGPT to determine when to use this tool.'\n                        multiline={true}\n                        rows={3}\n                        value={toolDesc}\n                        name='toolDesc'\n                        onChange={(e) => setToolDesc(e.target.value)}\n                    />\n                </Box>\n                <Box sx={{ p: 2 }}>\n                    <Stack sx={{ position: 'relative' }} direction='row'>\n                        <Typography variant='overline'>Tool Icon Src</Typography>\n                    </Stack>\n                    <OutlinedInput\n                        id='toolIcon'\n                        type='string'\n                        fullWidth\n                        disabled={dialogProps.type === 'TEMPLATE'}\n                        placeholder='https://raw.githubusercontent.com/gilbarbara/logos/main/logos/airtable.svg'\n                        value={toolIcon}\n                        name='toolIcon'\n                        onChange={(e) => setToolIcon(e.target.value)}\n                    />\n                </Box>\n                <Box sx={{ p: 2 }}>\n                    <Stack sx={{ position: 'relative' }} direction='row'>\n                        <Typography variant='overline'>\n                            Output Schema\n                            <TooltipWithParser style={{ marginLeft: 10 }} title={'What should be the output response in JSON format?'} />\n                        </Typography>\n                    </Stack>\n                    <Grid\n                        columns={columns}\n                        rows={toolSchema}\n                        disabled={dialogProps.type === 'TEMPLATE'}\n                        addNewRow={addNewRow}\n                        onRowUpdate={onRowUpdate}\n                    />\n                </Box>\n                <Box sx={{ p: 2 }}>\n                    <Stack sx={{ position: 'relative' }} direction='row'>\n                        <Typography variant='overline'>\n                            Javascript Function\n                            <TooltipWithParser\n                                style={{ marginLeft: 10 }}\n                                title='Function to execute when tool is being used. You can use properties specified in Output Schema as variables. For example, if the property is <code>userid</code>, you can use as <code>$userid</code>. Return value must be a string. You can also override the code from API by following this <a target=\"_blank\" href=\"https://docs.flowiseai.com/tools/custom-tool#override-function-from-api\">guide</a>'\n                            />\n                        </Typography>\n                    </Stack>\n                    {dialogProps.type !== 'TEMPLATE' && (\n                        <Button style={{ marginBottom: 10 }} variant='outlined' onClick={() => setToolFunc(exampleAPIFunc)}>\n                            See Example\n                        </Button>\n                    )}\n                    <CodeEditor\n                        disabled={dialogProps.type === 'TEMPLATE'}\n                        value={toolFunc}\n                        height='calc(100vh - 220px)'\n                        theme={customization.isDarkMode ? 'dark' : 'light'}\n                        lang={'js'}\n                        onValueChange={(code) => setToolFunc(code)}\n                    />\n                </Box>\n            </DialogContent>\n            <DialogActions>\n                {dialogProps.type === 'EDIT' && (\n                    <StyledButton color='error' variant='contained' onClick={() => deleteTool()}>\n                        Delete\n                    </StyledButton>\n                )}\n                {dialogProps.type === 'TEMPLATE' && (\n                    <StyledButton color='secondary' variant='contained' onClick={useToolTemplate}>\n                        Use Template\n                    </StyledButton>\n                )}\n                {dialogProps.type !== 'TEMPLATE' && (\n                    <StyledButton\n                        disabled={!(toolName && toolDesc)}\n                        variant='contained'\n                        onClick={() => (dialogProps.type === 'ADD' || dialogProps.type === 'IMPORT' ? addNewTool() : saveTool())}\n                    >\n                        {dialogProps.confirmButtonName}\n                    </StyledButton>\n                )}\n            </DialogActions>\n            <ConfirmDialog />\n        </Dialog>\n    ) : null\n\n    return createPortal(component, portalElement)\n}\n\nToolDialog.propTypes = {\n    show: PropTypes.bool,\n    dialogProps: PropTypes.object,\n    onUseTemplate: PropTypes.func,\n    onCancel: PropTypes.func,\n    onConfirm: PropTypes.func\n}\n\nexport default ToolDialog\n","import { useEffect, useState, useRef } from 'react'\nimport { useSelector } from 'react-redux'\n\n// material-ui\nimport { Grid, Box, Stack, Button, Typography } from '@mui/material'\nimport { useTheme } from '@mui/material/styles'\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard'\nimport ItemCard from 'ui-component/cards/ItemCard'\nimport { gridSpacing } from 'store/constant'\nimport ToolEmptySVG from 'assets/images/tools_empty.svg'\nimport { StyledButton } from 'ui-component/button/StyledButton'\nimport ToolDialog from './ToolDialog'\n\n// API\nimport toolsApi from 'api/tools'\n\n// Hooks\nimport useApi from 'hooks/useApi'\n\n// icons\nimport { IconPlus, IconFileImport } from '@tabler/icons'\nimport { withAuthenticationRequired } from '@auth0/auth0-react'\n\n// ==============================|| CHATFLOWS ||============================== //\n\nconst Tools = () => {\n    const theme = useTheme()\n    const customization = useSelector((state) => state.customization)\n\n    const getAllToolsApi = useApi(toolsApi.getAllTools)\n\n    const [showDialog, setShowDialog] = useState(false)\n    const [dialogProps, setDialogProps] = useState({})\n\n    const inputRef = useRef(null)\n\n    const onUploadFile = (file) => {\n        try {\n            const dialogProp = {\n                title: 'Add New Tool',\n                type: 'IMPORT',\n                cancelButtonName: 'Cancel',\n                confirmButtonName: 'Save',\n                data: JSON.parse(file)\n            }\n            setDialogProps(dialogProp)\n            setShowDialog(true)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const handleFileUpload = (e) => {\n        if (!e.target.files) return\n\n        const file = e.target.files[0]\n\n        const reader = new FileReader()\n        reader.onload = (evt) => {\n            if (!evt?.target?.result) {\n                return\n            }\n            const { result } = evt.target\n            onUploadFile(result)\n        }\n        reader.readAsText(file)\n    }\n\n    const addNew = () => {\n        const dialogProp = {\n            title: 'Add New Tool',\n            type: 'ADD',\n            cancelButtonName: 'Cancel',\n            confirmButtonName: 'Add'\n        }\n        setDialogProps(dialogProp)\n        setShowDialog(true)\n    }\n\n    const edit = (selectedTool) => {\n        const dialogProp = {\n            title: 'Edit Tool',\n            type: 'EDIT',\n            cancelButtonName: 'Cancel',\n            confirmButtonName: 'Save',\n            data: selectedTool\n        }\n        setDialogProps(dialogProp)\n        setShowDialog(true)\n    }\n\n    const onConfirm = () => {\n        setShowDialog(false)\n        getAllToolsApi.request()\n    }\n\n    useEffect(() => {\n        getAllToolsApi.request()\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <>\n            <MainCard sx={{ background: customization.isDarkMode ? theme.palette.common.black : '' }}>\n                <Stack flexDirection='row'>\n                    {/* <h1>Tools</h1> */}\n                    <Typography variant='h1'>Tools</Typography>\n                    <Grid sx={{ mb: 1.25 }} container direction='row'>\n                        <Box sx={{ flexGrow: 1 }} />\n                        <Grid item>\n                            <Button\n                                variant='outlined'\n                                sx={{ mr: 2 }}\n                                onClick={() => inputRef.current.click()}\n                                startIcon={<IconFileImport />}\n                            >\n                                Load\n                            </Button>\n                            <input ref={inputRef} type='file' hidden accept='.json' onChange={(e) => handleFileUpload(e)} />\n                            <StyledButton variant='contained' sx={{ color: 'white' }} onClick={addNew} startIcon={<IconPlus />}>\n                                Create\n                            </StyledButton>\n                        </Grid>\n                    </Grid>\n                </Stack>\n                <Grid container spacing={gridSpacing}>\n                    {!getAllToolsApi.loading &&\n                        getAllToolsApi.data &&\n                        getAllToolsApi.data.map((data, index) => (\n                            <Grid key={index} item lg={3} md={4} sm={6} xs={12}>\n                                <ItemCard data={data} onClick={() => edit(data)} />\n                            </Grid>\n                        ))}\n                </Grid>\n                {!getAllToolsApi.loading && (!getAllToolsApi.data || getAllToolsApi.data.length === 0) && (\n                    <Stack sx={{ alignItems: 'center', justifyContent: 'center' }} flexDirection='column'>\n                        <Box sx={{ p: 2, height: 'auto' }}>\n                            <img style={{ objectFit: 'cover', height: '30vh', width: 'auto' }} src={ToolEmptySVG} alt='ToolEmptySVG' />\n                        </Box>\n                        <div>No Tools Created Yet</div>\n                    </Stack>\n                )}\n            </MainCard>\n            <ToolDialog\n                show={showDialog}\n                dialogProps={dialogProps}\n                onCancel={() => setShowDialog(false)}\n                onConfirm={onConfirm}\n            ></ToolDialog>\n        </>\n    )\n}\n\nexport default withAuthenticationRequired(Tools)\n"],"names":["apiClient","axios","create","baseURL","concat","headers","interceptors","request","use","config","username","localStorage","getItem","password","auth","getAllTools","client","get","getSpecificTool","id","createNewTool","body","post","updateTool","put","deleteTool","delete","apiFunc","data","setData","useState","error","setError","loading","setLoading","async","result","arguments","err","resolveCallback","useConfirm","confirmState","dispatch","useContext","ConfirmContext","closeConfirm","type","HIDE_CONFIRM","confirm","confirmPayload","SHOW_CONFIRM","payload","Promise","res","onConfirm","onCancel","StyledButton","styled","Button","_ref","theme","color","background","borderRadius","backgroundColor","palette","primary","isDisable","backgroundImage","MuiToggleButton","_ref2","main","ChatflowCard","_jsx","Card","children","CardContent","_jsxs","Grid","container","direction","item","justifyContent","Skeleton","variant","width","height","sx","my","CardWrapper","MainCard","card","ItemCard","darkTextPrimary","overflow","position","boxShadow","cursor","ItemCardhover","maxHeight","maxWidth","overflowWrap","whiteSpace","isLoading","images","onClick","customization","useSelector","state","_Fragment","SkeletonChatflowCard","border","content","Box","p","style","display","flexDirection","alignItems","iconSrc","marginRight","backgroundSize","backgroundRepeat","backgroundPosition","Typography","isDarkMode","fontSize","fontWeight","templateName","name","description","marginTop","flexWrap","map","img","padding","objectFit","alt","src","ConfirmDialog","portalElement","document","getElementById","component","show","Dialog","fullWidth","open","onClose","DialogTitle","title","DialogContent","DialogActions","cancelButtonName","confirmButtonName","createPortal","CodeEditor","value","lang","placeholder","disabled","basicSetup","onValueChange","customStyle","EditorView","baseTheme","CodeMirror","vscodeDark","sublime","extensions","javascript","jsx","lineWrapping","json","onChange","readOnly","editable","TooltipWithParser","Tooltip","parser","placement","IconButton","Info","displayed","useNotifier","useDispatch","notifier","notifications","enqueueSnackbar","closeSnackbar","useSnackbar","React","forEach","key","message","options","dismissed","includes","event","reason","myKey","onExited","removeSnackbar","filter","columns","rows","onRowUpdate","addNewRow","startIcon","IconPlus","DataGrid","processRowUpdate","newRow","isCellEditable","onProcessRowUpdateError","console","dialogProps","onUseTemplate","enqueueSnackbarAction","closeSnackbarAction","getSpecificToolApi","useApi","toolsApi","toolId","setToolId","toolName","setToolName","toolDesc","setToolDesc","toolIcon","setToolIcon","toolSchema","setToolSchema","toolFunc","setToolFunc","deleteItem","useCallback","setTimeout","prevRows","row","useMemo","field","headerName","flex","valueOptions","getActions","params","GridActionsCellItem","icon","DeleteIcon","label","useEffect","SHOW_CANVAS_DIALOG","HIDE_CANVAS_DIALOG","formatDataGridRows","schema","func","toolResp","toolData","createdDate","updatedDate","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","createElement","setAttribute","click","errorData","response","status","statusText","Date","getTime","Math","random","persist","action","IconX","exportTool","IconFileExport","Stack","marginLeft","OutlinedInput","e","target","multiline","allRows","cloneDeep","lastRowId","length","push","property","required","indexToUpdate","findIndex","marginBottom","code","useToolTemplate","obj","generateRandomGradient","createResp","addNewTool","saveResp","saveTool","withAuthenticationRequired","Tools","useTheme","getAllToolsApi","showDialog","setShowDialog","setDialogProps","inputRef","useRef","handleFileUpload","files","file","reader","FileReader","onload","evt","_evt$target","dialogProp","parse","onUploadFile","readAsText","common","black","mb","flexGrow","mr","current","IconFileImport","ref","hidden","accept","addNew","spacing","gridSpacing","index","lg","md","sm","xs","ToolEmptySVG","ToolDialog"],"sourceRoot":""}